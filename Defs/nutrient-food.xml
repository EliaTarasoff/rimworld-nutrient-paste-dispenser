<?xml version="1.0" encoding="utf-8" ?>
<Defs>
    <!--Base-->
    <ThingDef Name="MealNutrientBase" Abstract="True">
        <drawGUIOverlay>true</drawGUIOverlay>
        <altitudeLayer>Item</altitudeLayer>

        <category>Item</category>
        <thingCategories>
            <li>FoodMeals</li>
        </thingCategories>
        <selectable>true</selectable>
        <tickerType>Rare</tickerType>
        <socialPropernessMatters>true</socialPropernessMatters>
        <alwaysHaulable>true</alwaysHaulable>
        <pathCost>15</pathCost>
        <resourceReadoutPriority>Last</resourceReadoutPriority>

        <useHitPoints>true</useHitPoints>
        <statBases>
            <Flammability>1.0</Flammability>
            <Beauty>0</Beauty>
        </statBases>
        <thingClass>ThingWithComps</thingClass>
        <comps>
            <li Class="CompProperties_Forbiddable"/>
            <li Class="CompProperties_Ingredients"/>
            <!--
            Make it a safe food, just like the base game's nutrient-paste.
            (Base game bypasses normal item-generation, and thus ignores this stat.)
            Do it by by not having this tag:
            <li Class="CompProperties_FoodPoisonable"/>
            -->
        </comps>
        <tradeability>Sellable</tradeability>
        <ingestible>
            <foodType>Meal</foodType>
            <maxNumToIngestAtOnce>1</maxNumToIngestAtOnce>
            <ingestEffect>EatVegetarian</ingestEffect>
            <ingestSound>Meal_Eat</ingestSound>
            <preferability>MealAwful</preferability>
        </ingestible>
    </ThingDef>


    <!--Paste-->
    <!--
    The item is defined in a patch file, to override the base game, and because trying to delete it entirely is bad.
    (Too many things in base game reference it.)
    -->

    <ThoughtDef>
        <defName>AteNutrientPasteMeal</defName>
        <showBubble>true</showBubble>
        <icon>Things/Mote/ThoughtSymbol/Food</icon>
        <durationDays>1</durationDays>
        <stages>
            <li>
                <label>ate nutrient paste</label>
                <description>My meal was a tube full of gritty, bitter slime. It's keeping me alive, but it's hard to keep down.</description>
                <baseMoodEffect>-4</baseMoodEffect>
            </li>
        </stages>
    </ThoughtDef>


    <!--Bricks-->
    <ThingDef Name="MealNutrientBrick" ParentName="MealNutrientBase">
        <defName>MealNutrientBrick</defName>
        <label>nutrient brick meal</label>
        <description>Dehydrated nutrient paste, wrapped in polymer made from inedible food-parts. The dehydration, and polymer-wrapping process for nutrient paste was invented to keep people alive on long-haul cargo routes. Unfortunately, it tastes just as bad as nutrient paste...that's also been burned a little. Rumored to have been invented by a scientist who liked historical films starring Charlton Heston, and hated everyone else. At least it's better than eating kibble.</description>

        <graphicData>
            <graphicClass>Graphic_StackCount</graphicClass>
            <texPath>Things/Item/Resource/StoneBlocks</texPath>
            <color>(120,140,80)</color>
        </graphicData>

        <stackLimit>15</stackLimit>
        <statBases>
            <MaxHitPoints>100</MaxHitPoints>
            <DeteriorationRate>5</DeteriorationRate>
            <Nutrition>0.9</Nutrition>
            <MarketValue>7</MarketValue>
            <Mass>0.27</Mass>
        </statBases>
        <comps>
            <li Class="CompProperties_Rottable">
                <daysToRotStart>80</daysToRotStart> <!-- pemmican is 70; Raw corn (an ingredient!) is 60; paste, meals are 4 -->
                <rotDestroys>true</rotDestroys>
            </li>
        </comps>
        <tradeability>Sellable</tradeability>
        <ingestible>
            <optimalityOffsetHumanlikes>-7</optimalityOffsetHumanlikes> <!-- I *think* the optimality offset is checked second, after preferability of MealAwful, which would end up with pawns eating paste when there's simple meals nearby. (Seemed to happen with my bricks, so I'm patching this on paste.) -->
            <tasteThought>AteNutrientBrickMeal</tasteThought>
        </ingestible>
    </ThingDef>

    <ThoughtDef>
        <defName>AteNutrientBrickMeal</defName>
        <showBubble>true</showBubble>
        <icon>Things/Mote/ThoughtSymbol/Food</icon>
        <durationDays>1</durationDays>
        <stages>
            <li>
                <label>ate nutrient brick</label>
                <description>I ate a brick of dehydrated nutrient-paste. I'd like to say that it tastes just as bad as the paste, but now it also tastes burnt, from the dehydration process.</description>
                <baseMoodEffect>-6</baseMoodEffect> <!-- kibble is -12; raw food is -7; nutrient paste is -4, pemmican is 0 -->
            </li>
        </stages>
    </ThoughtDef>
</Defs>
