<?xml version="1.0" encoding="utf-8" ?>
<Defs>
    <ThingDef Name="MealNutrientBase" Abstract="True">
        <drawGUIOverlay>true</drawGUIOverlay>
        <altitudeLayer>Item</altitudeLayer>

        <category>Item</category>
        <thingCategories>
            <li>FoodMeals</li>
        </thingCategories>
        <selectable>true</selectable>
        <tickerType>Rare</tickerType>
        <socialPropernessMatters>true</socialPropernessMatters>
        <alwaysHaulable>true</alwaysHaulable>
        <pathCost>15</pathCost>
        <resourceReadoutPriority>Last</resourceReadoutPriority>

        <useHitPoints>true</useHitPoints>
        <statBases>
            <Flammability>1.0</Flammability>
            <Beauty>0</Beauty>
        </statBases>
        <thingClass>ThingWithComps</thingClass>
        <comps>
            <!--
            Make it a safe food, just like the base game's nutrient-paste.
            Do it by by not having this tag:
            <li Class="CompProperties_FoodPoisonable"/>
            (The base game bypasses normal item-generation, and thus ignores this tag.)
            -->
            <li Class="CompProperties_Forbiddable"/>
        </comps>
        <ingestible>
            <foodType>Meal</foodType>
            <maxNumToIngestAtOnce>1</maxNumToIngestAtOnce>
            <ingestEffect>EatVegetarian</ingestEffect>
            <ingestSound>Meal_Eat</ingestSound>
            <!--
            preferability:
                NeverForNutrition
                DesperateOnly
                DesperateOnlyForHumanlikes
                RawBad
                RawTasty
                MealAwful
                MealSimple
                MealFine
                MealLavish

            optimalityOffsetHumanlikes:
                I *think* the optimality offset is checked second, after preferability.
                But maybe it overrides what the preferability would do?
                Negative is worse / eaten later, positive is better / eaten earlier?
                -30 kibble (RawBad)
                 -5 packaged survival meal (MealSimple)
                  5 pemmican (MealSimple)
                 16 MealBase (???)
            -->
        </ingestible>
    </ThingDef>

    <ThoughtDef Name="NutrientThoughtBase" Abstract="True">
        <showBubble>true</showBubble>
        <icon>Things/Mote/ThoughtSymbol/Food</icon>
        <durationDays>1</durationDays>
        <!--
        mood:
            -20 raw cannibalism
            -15 cooked cannibalism
            -12 kibble
             -7 raw food
             -6 insect meat
             -4 base-game nutrient paste
            +15 cooked cannibalism as cannibal
            +20 raw cannibalism as cannibal
        -->
    </ThoughtDef>



    <ThingDef Name="MealNutrientPasteBase" ParentName="MealNutrientBase" Abstract="True">
        <graphicData>
            <texPath>Things/Item/Meal/NutrientPaste</texPath>
            <graphicClass>Graphic_Stackcount</graphicClass>
        </graphicData>

        <stackLimit>10</stackLimit>
        <statBases>
            <MaxHitPoints>25</MaxHitPoints>
            <DeteriorationRate>10</DeteriorationRate>
            <Nutrition>0.9</Nutrition>
            <MarketValue>10</MarketValue>
            <Mass>0.44</Mass>
        </statBases>
        <comps>
            <li Class="CompProperties_Rottable">
                <daysToRotStart>2</daysToRotStart> <!-- pemmican 70, corn 60, rice 40, potatoes 30, berries 14, meals 4 -->
                <rotDestroys>true</rotDestroys>
            </li>
        </comps>
        <tradeability>Buyable</tradeability>
    </ThingDef>


    <!--
    MealNutrientPaste is defined in a patch file to override the base game, because trying to delete it entirely is bad.
    (Too many things in base game reference it.)
    -->

    <ThoughtDef ParentName="NutrientThoughtBase">
        <defName>AteNutrientPaste</defName>

        <stages>
            <li>
                <label>ate nutrient paste</label>
                <description>I ate a tube full of gritty, bitter slime. It's keeping me alive, but it's hard to keep down.</description>
                <baseMoodEffect>-4</baseMoodEffect>
            </li>
        </stages>
    </ThoughtDef>



    <ThingDef Name="MealNutrientBrickBase" ParentName="MealNutrientBase" Abstract="True">
        <graphicData>
            <graphicClass>Graphic_StackCount</graphicClass>
            <texPath>Things/Item/Resource/StoneBlocks</texPath>
        </graphicData>

        <stackLimit>15</stackLimit>
        <statBases>
            <MaxHitPoints>50</MaxHitPoints>
            <DeteriorationRate>5</DeteriorationRate>
            <Nutrition>0.9</Nutrition>
            <MarketValue>7</MarketValue> <!-- Raw vegetables are ($1.1 / 0.05 nutrition) * 0.3 nutrition = $6.6 per brick. These should not be good to trade; Not terrible, but not good. -->
            <Mass>0.27</Mass>
        </statBases>
        <comps>
            <li Class="CompProperties_Rottable">
                <daysToRotStart>40</daysToRotStart> <!-- pemmican 70, corn 60, rice 40, potatoes 30, berries 14, meals 4 -->
                <rotDestroys>true</rotDestroys>
            </li>
        </comps>
        <tradeability>Sellable</tradeability>
        <ingestible>
            <baseIngestTicks>1500</baseIngestTicks>  <!-- Not sure how slow meals are - they don't have any values defined in XML. Maybe 600? Seems like 60 ticks per second. -->
        </ingestible>
    </ThingDef>


    <ThingDef ParentName="MealNutrientBrickBase">
        <defName>MealNutrientBrick</defName>
        <label>nutrient brick meal</label>
        <description>Dehydrated nutrient paste, wrapped in polymer made from inedible food-parts. The dehydration, and polymer-wrapping process for nutrient paste was invented to keep people alive on long-haul cargo routes. Unfortunately, it tastes just as bad as nutrient paste...that's also been burned a little. Rumored to have been invented by a scientist who liked historical films starring Charlton Heston, and hated everyone else. At least it's better than eating kibble.</description>

        <graphicData>
            <color>(120, 140, 80)</color>
        </graphicData>

        <ingestible>
            <preferability>MealAwful</preferability>
            <optimalityOffsetHumanlikes>-15</optimalityOffsetHumanlikes>
            <tasteThought>AteNutrientBrickMeal</tasteThought>
        </ingestible>
    </ThingDef>

    <ThoughtDef ParentName="NutrientThoughtBase">
        <defName>AteNutrientBrickMeal</defName>

        <stages>
            <li>
                <label>ate nutrient brick</label>
                <description>I ate a brick of dehydrated nutrient-paste. I'd like to say that it tastes just as bad as the paste, but now it also tastes burnt, from the dehydration process.</description>
                <baseMoodEffect>-6</baseMoodEffect>
            </li>
        </stages>
    </ThoughtDef>
</Defs>
